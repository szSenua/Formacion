-- Creación de la tabla solicitantes
CREATE TABLE solicitantes (
    dni VARCHAR(9) UNIQUE,
    apellidos VARCHAR(20),
    nombre VARCHAR(20),
    contrasena VARCHAR(9),
    telefono VARCHAR(11),
    correo VARCHAR(50),
    codigocentro VARCHAR(8),
    coordinadortc BOOLEAN,
    grupotc BOOLEAN,
    nombregrupo VARCHAR(5),
    pbilin BOOLEAN,
    cargo BOOLEAN,
    nombrecargo VARCHAR(15),
    situacion ENUM('activo', 'inactivo'),
    fechaAlta DATE,
    especialidad VARCHAR(50),
    puntos INT(3),
    PRIMARY KEY (dni)
);

-- Creación de la tabla cursos
CREATE TABLE cursos (
    codigo INT AUTO_INCREMENT,
    nombre VARCHAR(50),
    abierto BOOLEAN,
    numeroplazas INT(2),
    plazoinscripcion DATE,
    PRIMARY KEY (codigo)
);

-- Creación de la tabla solicitudes
CREATE TABLE solicitudes (
    dni VARCHAR(9),
    codigocurso INT(6),
    fechasolicitud DATE,
    admitido BOOLEAN,
    FOREIGN KEY (dni) REFERENCES solicitantes(dni),
    FOREIGN KEY (codigocurso) REFERENCES cursos(codigo),
    PRIMARY KEY (dni, codigocurso)
);

-- Creación de la tabla administradores
CREATE TABLE administradores (
    id INT AUTO_INCREMENT,
    usuario VARCHAR(9),
    contrasena VARCHAR(9),
    PRIMARY KEY(id)
);

-- Creación del procedimiento almacenado (idea)
DELIMITER //
CREATE PROCEDURE calcularPuntos(IN dni_param VARCHAR(9))
BEGIN
    DECLARE puntos INT;

    -- Lógica para calcular puntos
    SELECT
        SUM(CASE WHEN coordinadortc THEN 4 ELSE 0 END +
            CASE WHEN grupotc THEN 3 ELSE 0 END +
            CASE WHEN pbilin THEN 3 ELSE 0 END +
            CASE WHEN cargo = 1 THEN 2
                 WHEN cargo = 2 THEN 2
                 WHEN cargo = 3 THEN 2
                 WHEN cargo = 4 THEN 1
                 ELSE 0 END +
            CASE WHEN DATEDIFF(CURDATE(), fechaAlta) > 15 THEN 1 ELSE 0 END +
            CASE WHEN situacion = 'activo' THEN 1 ELSE 0 END)
    INTO puntos
    FROM solicitantes
    WHERE dni = dni_param;

    -- Actualizar puntos en la tabla solicitantes
    UPDATE solicitantes
    SET puntos = puntos
    WHERE dni = dni_param;
END //
DELIMITER ;

-- Creación del disparador
DELIMITER //
CREATE TRIGGER calcularPuntosAfterInsert
AFTER INSERT ON solicitantes
FOR EACH ROW
BEGIN
    CALL calcularPuntos(NEW.dni);
END //
DELIMITER ;
